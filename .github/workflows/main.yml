name: Rust Windows-Linux-Darwin Cross Build

on:
  release:
    types:
      - created  # Trigger this workflow when a release is created
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build project for Windows GNU
        uses: sevco/rust-windows-cross-action@v1.0.0
        with:
          args: build --release --all-features --target x86_64-pc-windows-gnu
          credentials: ${{ secrets.GIT_CREDENTIALS }}

      - name: Add MSVC toolchain and linker
        run: sudo apt-get install -y mingw-w64

      - name: Install additional dependencies for MSVC
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake

      - name: Set up MSVC environment
        run: |
          rustup target add x86_64-pc-windows-msvc
          rustup toolchain install stable-x86_64-pc-windows-msvc

      - name: Build project for Windows MSVC
        run: cargo build --release --all-features --target x86_64-pc-windows-msvc

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Pull Docker Image
        run: docker pull joseluisq/rust-linux-darwin-builder:latest

      - name: Make shell script executable
        run: chmod +x ./build.sh

      - name: Run Shell Script
        run: ./build.sh

      - name: Copy files to artifacts
        run: |
          mkdir -p artifacts
          cp target/x86_64-pc-windows-gnu/release/*.exe artifacts/
          cp target/x86_64-pc-windows-msvc/release/*.exe artifacts/

      - name: Archive build artifacts
        run: |
          cp -r ./bin/* artifacts/

      - name: Upload Release Assets
        run: |
          for file in ./artifacts/*; do
            echo "Uploading $file"
            gh release upload ${{ github.event.release.tag_name }} $file --clobber
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Automatically provided by GitHub Actions
