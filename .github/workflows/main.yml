name: Rust Windows-Linux-Darwin Cross Build

on:
  release:
    types:
      - created  # Trigger this workflow when a release is created
  workflow_dispatch:

jobs:
  # Docker-based Linux-Darwin build on Ubuntu
  build-linux-darwin:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Pull Docker Image
        run: docker pull joseluisq/rust-linux-darwin-builder:latest

      - name: Make shell script executable
        run: chmod +x ./build.sh

      - name: Run Shell Script
        run: ./build.sh

      - name: Copy Linux-Darwin build to artifacts
        run: |
          mkdir -p artifacts
          cp -r ./bin/* artifacts/

      - name: Upload artifacts for later use
        uses: actions/upload-artifact@v3
        with:
          name: linux-darwin-build
          path: artifacts

  # Windows build for both GNU and MSVC targets using cargo
  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Install Visual Studio Build Tools using Chocolatey
      - name: Install Visual Studio Build Tools
        run: |
          choco install visualstudio2019buildtools --package-parameters "--add Microsoft.VisualStudio.Workload.VCTools --includeRecommended --passive"

      - name: Set up Rust toolchain for Windows
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Add MSVC target
        run: rustup target add x86_64-pc-windows-msvc

      - name: Add GNU target
        run: rustup target add x86_64-pc-windows-gnu

      - name: Build project for Windows GNU
        run: cargo build --release --all-features --target x86_64-pc-windows-gnu

      - name: Build project for Windows MSVC
        run: cargo build --release --all-features --target x86_64-pc-windows-msvc

      - name: Copy Windows builds to artifacts
        run: |
          mkdir -p artifacts
          copy target\x86_64-pc-windows-gnu\release\*.exe artifacts\
          copy target\x86_64-pc-windows-msvc\release\*.exe artifacts\

      - name: Upload artifacts for later use
        uses: actions/upload-artifact@v3
        with:
          name: windows-build
          path: artifacts

  # Job to upload all artifacts from both Ubuntu and Windows
  upload-release-assets:
    runs-on: ubuntu-latest
    needs: [build-linux-darwin, build-windows]

    steps:
      - name: Download Linux-Darwin build artifacts
        uses: actions/download-artifact@v3
        with:
          name: linux-darwin-build

      - name: Download Windows build artifacts
        uses: actions/download-artifact@v3
        with:
          name: windows-build

      - name: Upload Release Assets
        run: |
          for file in ./artifacts/*; do
            echo "Uploading $file"
            gh release upload ${{ github.event.release.tag_name }} $file --clobber
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
