name: Makefile

on:
  release:
    types:
      - created  # Trigger this workflow when a release is created

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      # Install build-essential
      - name: Install build-essential
        run: sudo apt-get update && sudo apt-get install -y build-essential

      # Set up Docker (ensure Docker is available to use)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Pull the specific Docker image (for use in the shell script)
      - name: Pull Docker Image
        run: docker pull joseluisq/rust-linux-darwin-builder:latest

      # Add execution permission to the shell script
      - name: Make shell script executable
        run: chmod +x ./build.sh

      # Run the shell script directly (which can interact with Docker)
      - name: Run Shell Script
        run: ./build.sh

      # Archive build artifacts (bin folder)
      - name: Archive build artifacts
        run: |
          mkdir -p artifacts
          cp -r ./bin/* artifacts/  # Copy all generated files from bin to artifacts

      # Upload each file in the bin directory to the release
      - name: Upload Release Assets
        run: |
          for file in ./artifacts/*; do
            echo "Uploading $file"
            gh release upload ${{ github.event.release.tag_name }} $file --clobber
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Automatically provided by GitHub Actions
